<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content"><channel><title>RH</title><description>iOS Developer</description><link>https://herdzikrobert.com/</link><language>en</language><lastBuildDate>Fri, 22 May 2020 12:41:27 +0200</lastBuildDate><pubDate>Fri, 22 May 2020 12:41:27 +0200</pubDate><ttl>250</ttl><atom:link href="https://herdzikrobert.com/feed.rss" rel="self" type="application/rss+xml"/><item><guid isPermaLink="true">https://herdzikrobert.com/posts/saying_sorry_to_vim_2020_05_22</guid><title>Saying sorry to Vim</title><description>Let’s be honest, we all need to know at least the basics of...</description><link>https://herdzikrobert.com/posts/saying_sorry_to_vim_2020_05_22</link><pubDate>Fri, 22 May 2020 10:00:00 +0200</pubDate><content:encoded><![CDATA[<h1>Saying sorry to Vim</h1><p>Some time ago, I decided to stop being ignorant in the area of Vim text editor, mainly due to playing with my raspberryPi via terminal or pushing myself more into using git via terminal mainly, Vim skills are welcome for these use cases.</p><p>Key thing to know is that this powerful editor is available on most Linux distributions by default, if not you can easily install it. Do you see this.. learn it once, and you are using it everywhere. There is also a crazy amount of plugins which you can additionally install, to make your flow even more pleasant.</p><p>Com’on, also as an engineer, we need to know at least how to ‘exit’ from the vi document. I believe that even basic knowledge of Vim will buy you a lot of time in your day to day work, and for sure you will look more ‘pro’.</p><h2>First step</h2><p>With a very fundamental level of Vim knowledge, I started to explore the quickest paths to learn more, and I have found a nice tweet, which was promoting very cool looking platform game, using which, in easy, and funny way I was able to refresh my memory, and learn more shortcuts. The name of the game is VIM Adventures, and you can find it <a href="https://vim-adventures.com/">here</a> #highlyRecommend. After some time with the game, I started to feel comfortable with Vim once again, and in this way I could force myself more toward Vim, during my day to day work {fas fa-tools}.</p><h2>Gathering short cheat sheet collection, base on my needs</h2><p>We cannot estimate how much you need to know upfront, so I didn't even want to create a collection of cheat sheet shortcuts upfront, I decided that I do it, once I face the need to use a particular feature of Vim (incrementally creating my personal cheat sheet). This technique is commonly known as <a href="https://en.wikipedia.org/wiki/You_aren%27t_gonna_need_it">YAGNI</a> in software development, funny thing, but I apply this rule quite often, even in my life.</p><p>Please find below all shortcuts which I have found useful for me, for sure list is going to grow with the time (maybe good idea would be to put it in github repo {fas fa-smile})</p><h2>My base cheat sheet</h2><hr><h3>Help</h3><ul><li><code>:help keyword</code> - open help for keyword</li></ul><hr><h3>Create/save file</h3><ul><li><code>vi {fileName}</code> - create/open file from Terminal</li><li><code>:q</code> - exit without saving</li><li><code>:q!</code> - force exit without saving (in case you have changes, which needs to be ignored)</li><li><code>:wq</code> - save and exit</li><li><code>:w</code> - save only</li></ul><hr><h3>Navigation</h3><ul><li><code>h, j, k, l</code> - move cursor</li><li><code>H</code> - move cursor to top of visible page</li><li><code>M</code> - move cursor to middle of visible page</li><li><code>L</code> - move cursor to bottom of current page</li><li><code>w</code> - jump to the beginning of next word</li><li><code>b</code> - jump to the beginning of the current word</li><li><code>e</code> - jump to the end of current word</li><li><code>G</code> - end of file</li><li><code>gg</code> - beginning of file</li><li><code>$</code> - end line</li><li><code>0</code> - beginning of line</li><li><code>A</code> - end of line + edit mode</li></ul><hr><h3>Deletion</h3><ul><li><code>dd</code> - delete whole line</li><li><code>dw</code> - delete word</li><li><code>x</code> - remove character</li></ul><hr><h3>New line</h3><ul><li><code>o</code> - insert new line below</li><li><code>O</code> - insert new line above</li></ul><hr><h3>Undo/reUndo</h3><ul><li><code>u</code> - undo</li><li><code>ctrl + r</code> - reUndo</li></ul><hr><h3>Find Word</h3><ul><li><code>:set hlsearch</code> - enable highlight search matches</li><li><code>:nohlsearch</code> - disable highlight search matches</li><li><code>:/{Word to match}</code> - <code>n</code> navigate forward, <code>N</code> navigate backward</li></ul><hr><h3>Copy/paste terminal internally</h3><ol><li><code>v</code> select block</li><li><code>y</code> copy</li><li>Press <code>P</code> to paste before the cursor, or <code>p</code> to paste after</li></ol><hr><h3>Cut/paste internally</h3><ol><li>Position the cursor where you want to begin cutting.</li><li>Press <code>v</code> to select characters (or uppercase <code>V</code> to select whole lines).</li><li>Move the cursor to the end of what you want to cut.</li><li>Press <code>d</code> to cut (or <code>y</code> to copy).</li><li>Move to where you would like to paste.</li><li>Press <code>P</code> to paste before the cursor, or <code>p</code> to paste after.</li></ol><hr><h3>Select</h3><ul><li><code>V</code> - whole block</li><li><code>v</code> - and navigate (using <code>h</code>, <code>j</code>, <code>k</code>, <code>l</code>) to select part of the text</li></ul><hr><h3>Visual features</h3><ul><li><code>:set number</code> - show line number</li><li><code>:set nonumber</code> - hide number</li></ul><hr><h2>Practicing</h2><p>The most important thing of course, is to practice! At the beginning it was very hard to start, because there is a huge temptation to move back to the UI driven text editor, but with time you will cross this thin line, and then Vim becomes quite intuitive, and is going to be your ‘go to’ editor. I’m constantly learning, and extending my knowledge in this area, I’m so excited each time, when I notice that, it has feature which I was missing using e.g. Sublime.</p><h2>More sources to explore Vim</h2><ul><li><a href="https://vim.rtorr.com/">Home | Vim Cheat Sheet</a></li></ul><p>For sure, that someone else created Vim Cheat Sheet before, here you can find quite broad library of shortcuts.</p><ul><li><a href="https://www.openvim.com/">Tutorial with main combination</a></li></ul><p>Another interactive way of learning, I didn’t use it, but I believe that is worth mentioning here. It presents the editor in a very easy to digest way!</p><ul><li><a href="https://vim-adventures.com/">VIM Adventures game</a></li></ul><p>Yep, I have just mentioned this game in the post.</p><ul><li><a href="https://www.youtube.com/watch?v=Scp0rhN3usU">Cristopher Okhravi tutorial</a></li></ul><p>If you prefer to learn from video, Christopher Okhravi, has a crazy nice YT series about Vim, also I strongly recommend to check his other videos where e.g. he is explaining SOLID principles in a very precise way.</p>]]></content:encoded></item><item><guid isPermaLink="true">https://herdzikrobert.com/posts/rebuild_website_2020_05_17</guid><title>I have rebuild my simple website three times during confinement</title><description>Short story about: being locked-up -&gt; purchasing Tacx road bike turbo-trainer -&gt; to generating my website using Publish at the end</description><link>https://herdzikrobert.com/posts/rebuild_website_2020_05_17</link><pubDate>Sun, 17 May 2020 18:35:00 +0200</pubDate><content:encoded><![CDATA[<h1>I have rebuild my simple website three times during confinement</h1><p>Yep, we have placed ourselves in very weird times… who would expect that we get that much “free time” from one day to another?</p><p>I need to admit that it was a shock to me, from one day to another we had to become ‘specialists’ in remote work. At the beginning I felt a bit lost, because I had some ideas in my head, how</p><p>I would like to consume near future free time. Lesson learned, adaptation is the key for our mental wealthiness. I just evaluated everything, and adjusted my roadmap, taking into consideration things which I can do from home. One thing worried me a lot, since I’m quite an active person, doing every month ~900km on my road bike, how to manage to make it still possible locked up in a Madrid flat? Yes, it seems easy, just buy turbo-trainer, but unfortunately thousands of Spanish amateur cyclists have been thought about the same, and the market was wiped out from turbo-trainers in one moment. What I did, after some time of analysis of the market, I noticed that only one reliable place left, where you can buy it is Decathlon. They were putting on stock couple turbo-trainers from time to time. So what I did was, set up a listener on their site, and at 6AM I got a notification, telling me that they changed the status of the product from ‘unavailable’ to ‘in stock’, and after 5 mins I become happy owner of Tacx turbo-trainer (FYI they gone from the website after 15 mins).</p><p>Ok, so my main physical need has been fulfilled, now let’s go to point two, my programming/technical TODO list. What was there? there was (and still is) a lot of things, but what bothered me the most, was my website state. To be clear my website has not been never an epic one… was more an ‘business card’ than something more complex.</p><p>First version was made using Wordpress, with a free template. Let’s say, I was not proud at all, but you know, an easy to do setup - won. Certain beautiful day I got an email from the company where I had my hosting, and they gave me a smash in face, with a new pricing policy. No, it was something that was ridiculous form me, paying that much for something which is not giving any profits, I decided to move to the <a href="https://pages.github.com/">github pages</a>. Free github hosting was totally ok, for my static page. I faced another obstacle, it means that I have to create a website by myself, ok… new skill to learn I thought. Nop, I didn’t run into coding/scripting right the way, I started to shape the colors theme and raw look and feel for my website. Idea was to have something simple with colors which are going to be cohesive. I found a nice predefined (by someone with better taste) pallet on <a href="https://coolors.co/">coolors.co</a> website, having this, and shaped the structure of the page, I was ready to write some “code”.</p><p>I started with plain CSS+HTML, I had to refresh my rusty knowledge about these stacks. After a couple of hours playing with them, I realised that, website looks ok, but is becoming quite hard to maintain and scale. I also started some episodes where I add some Bootstrap components to make my development faster, and be able to gain responsive design almost for free. Part of my weekend has been burned, and I launched a website, which was ‘ok’. Next working week passed, and I realised that if I would like to add a section with my e.g. blog posts, it will require from me a lot of dev work, realising that, I started to do some research. Thankfully, John Sundell, released <a href="https://github.com/JohnSundell/Publish">Publish</a>, Swifty static website generator. I did first look into the repo, but I was quite sceptical, at first glance, the level of understanding the repo to be able to create your own Theme was overwhelming to me a bit. But even though, I start to explore some part of the framework, just for sake of curiosity. After a couple of hours playing with the repo, and example website, I decided that, this ‘thing’ has potential, and will be relatively easy to work on my website in the future, if I would decide (one day) to build something more complex. I need to admit that, at the beginning mapping my ‘handmade’ Bootstrap webpage was quite hard, but with time I got knowledge of how the framework works, and I started to move around with more confidence.</p><p>There is still a lot of work to make my Publish template code more ‘pleasant’ to read/work with, but I think that it was worth spending some hours to make my website generation process more flexible, and at the end easier to use. In the future blog posts, I will try to cover some of the topics about these migration processes.</p>]]></content:encoded></item></channel></rss>